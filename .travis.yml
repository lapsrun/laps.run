# https://docs.travis-ci.com/user/customizing-the-build/#the-build-lifecycle
# https://docs.travis-ci.com/user/environment-variables/

dist: trusty
sudo: false

env:
  global:
    - PATH="$HOME/bin:$HOME/.local/bin:$PATH"

before_install:
  - date -u +'%Y-%m-%dT%H:%M:%S.%3NZ' > before_install-start
  - date -u +'%Y-%m-%dT%H:%M:%S.%3NZ' > before_install-end

install:
  - date -u +'%Y-%m-%dT%H:%M:%S.%3NZ' > install-start
  - wget https://github.com/gohugoio/hugo/releases/download/v0.48/hugo_0.48_Linux-64bit.tar.gz
  - tar xzvf hugo_0.48_Linux-64bit.tar.gz
  - mkdir -p ~/bin
  - mv hugo ~/bin/
  - wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O ~/bin/jq
  - chmod +x ~/bin/jq
  - wget https://github.com/mikefarah/yq/releases/download/2.1.1/yq_linux_amd64 -O ~/bin/yq
  - chmod +x ~/bin/yq
  - pip install --user awscli
  - date -u +'%Y-%m-%dT%H:%M:%S.%3NZ' > install-end

before_script:
  - date -u +'%Y-%m-%dT%H:%M:%S.%3NZ' > before_script-start
  - make build.yml
  - yq w -i build.yml timing.before_install.start "$(cat before_install-start)"
  - yq w -i build.yml timing.before_install.end "$(cat before_install-end)"
  - yq w -i build.yml timing.install.start "$(cat install-start)"
  - yq w -i build.yml timing.install.end "$(cat install-end)"
  - yq w -i build.yml timing.before_script.start "$(cat before_script-start)"

  - yq w -i build.yml versions.hugo "$(hugo version)"
  - yq w -i build.yml versions.jq "$(jq --version)"
  - yq w -i build.yml versions.yq "$(yq --version)"
  - yq w -i build.yml versions.aws "$(aws --version)"
  - yq w -i build.yml timing.before_script.end "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"

script:
  - yq w -i build.yml timing.script.start "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"
  - ./bin/travis-script.sh
  - yq w -i build.yml timing.script.end "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"

after_success:
  - yq w -i build.yml result "$TRAVIS_TEST_RESULT"

  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then yq new timing.after_success.start "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')" > deploy-preview.yml; fi
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then yq w -i deploy-preview.yml settings.aws_access_key_id "$AWS_ACCESS_KEY_ID"; fi
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then ./bin/deploy-preview-site.sh; fi
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then yq w -i deploy-preview.yml timing.after_success.end "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"; fi

after_failure:
  - yq w -i build.yml result "$TRAVIS_TEST_RESULT"

before_deploy:
  - yq new timing.before_deploy.start "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')" > deploy-production.yml
  - yq w -i deploy-production.yml settings.aws_access_key_id "$AWS_ACCESS_KEY_ID"
  - sed -i -e "s/123456abcdef/$TRAVIS_COMMIT/" public/index.html
  - sed -i -e "s/0000000000/$TRAVIS_BUILD_NUMBER/" public/index.html
  - yq w -i deploy-production.yml timing.before_deploy.end "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    local_dir: public/
    bucket: "laps.run"
    skip_cleanup: true
    on:
      repo: lapsrun/laps.run
      branch: master

after_deploy:
  - yq w -i deploy-production.yml timing.after_deploy.start "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"
  - yq w -i deploy-production.yml timing.after_deploy.end "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"

after_script:
  - yq w -i build.yml timing.after_script.start "$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')"
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ]; then aws s3 cp build.yml s3://laps.run-ops-data-private/build/$TRAVIS_BUILD_NUMBER.yml; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ]; then aws s3 cp deploy-preview.yml s3://laps.run-ops-data-private/deploy-preview/$TRAVIS_BUILD_NUMBER.yml; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ]; then aws s3 cp deploy-production.yml s3://laps.run-ops-data-private/deploy-production/$TRAVIS_BUILD_NUMBER.yml; fi
  - ./bin/trigger_ops_website_deploy.sh

jobs:
  include:
    - stage: laps.run
